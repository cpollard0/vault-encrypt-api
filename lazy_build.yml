---
- name: build lambda
  hosts: chris_test
  connection: local
  gather_facts: false
  ignore_errors: true

  vars:
    lambda_function_name: inf-vault-lam-encrypt
    lambda_filename: "{{ lambda_function_name }}_test.zip"
    lambda_path: "{{ playbook_dir }}/lambda/vault_encrypt_lambda"

  tasks:
    - name: create build directory
      file:
        path: "{{ lambda_path }}/build"
        state: directory

    - name: pip install reqs
      command: pip install -r {{ lambda_path }}/lambda_requirements.txt -t {{ lambda_path }}/build
      args:
        chdir: "{{ lambda_path }}"

    # TODO: Get pycrypto from here: https://github.com/Miserlou/lambda-packages
    # TODO: Copy ansible.cfg to build dir

    - name: create build for lambda
      command: zip -r {{ lambda_path }}/build/{{ lambda_filename }} .
      args:
        chdir: "{{ lambda_path }}"

    # - name: create lambda role
    #   cloudformation:
    #     aws_access_key: "{{ aws_access_key }}"
    #     aws_secret_key: "{{ aws_secret_key }}"
    #     security_token: "{{ security_token }}"
    #     region: "{{ aws_region }}"
    #     stack_name: "pin-mysql-cf-setup{{ label }}"
    #     state: present
    #     disable_rollback: true
    #     template: cloudformation/mysql_user_lambda_role.yml
    #     template_parameters:
    #       environment: "{{ label }}"
    #       ssmMysqlHost: "{{ ssm_mysql_host }}"
    #       ssmProftpdPass: "{{ ssm_proftpd_pass }}"
    #       pStoreKMSPolicyArn: "{{ kms_managed_policy_arn }}"
    #     tags:
    #       project: "aws-cfm"
    #   register: lambda_role
    #   delegate_to: localhost

    # - name: create lambda function
    #   lambda:
    #     aws_access_key: "{{ aws_access_key }}"
    #     aws_secret_key: "{{ aws_secret_key }}"
    #     security_token: "{{ security_token }}"
    #     region: "{{ aws_region }}"
    #     name: inf-vaultencrypt-lam-cmp
    #     state: present
    #     zip_file: '{{ lambda_path }}/{{ lambda_filename }}'
    #     runtime: 'python2.7'
    #     role: "{{ lambda_role['stack_outputs']['pinsqlserverrole'] }}"
    #     handler: lambda_function.lambda_handler
    #     timeout: 120
    #     memory_size: 128
    #   register: lambda_function
    #   delegate_to: localhost
